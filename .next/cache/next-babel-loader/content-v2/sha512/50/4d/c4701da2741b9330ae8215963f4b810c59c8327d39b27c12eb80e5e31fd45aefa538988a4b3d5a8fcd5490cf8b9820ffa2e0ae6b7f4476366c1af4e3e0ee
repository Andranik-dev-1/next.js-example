{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andranikkhachatryan/Desktop/React/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"; // import { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.image,\n      title: props.title,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  // const client = await MongoClient.connect(\n  //   \"mongodb+srv://andranikkhachatryandev:hangistnsteq@cluster-test.uriiowo.mongodb.net/?retryWrites=true&w=majority\"\n  // );\n  // const db = client.db();\n  // const meetupsCollection = db.collection(\"meetups\");\n  // const meetups = meetupsCollection.find().toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      id: meetupId,\n      image: \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\",\n      title: \"A first meetup\",\n      address: \"Some street 5 23e\",\n      description: \"The meetup description\"\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/andranikkhachatryan/Desktop/React/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","props","image","title","address","description","getStaticPaths","fallback","paths","meetups","map","meetup","params","meetupId","_id","toString","getStaticProps","context","console","log","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB,C,CACA;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,MAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,MAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA;AACA;AACA;AACA;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACG,GAAP,CAAWC,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLmB,MAAAA,EAAE,EAAEP,QADC;AAELX,MAAAA,KAAK,EACH,qEAHG;AAILC,MAAAA,KAAK,EAAE,gBAJF;AAKLC,MAAAA,OAAO,EAAE,mBALJ;AAMLC,MAAAA,WAAW,EAAE;AANR;AADF,GAAP;AAUD;AAED,eAAeL,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n// import { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <MeetupDetail\n        image={props.image}\n        title={props.title}\n        address={props.address}\n        description={props.description}\n      />\n    </Fragment>\n  );\n}\n\nexport async function getStaticPaths() {\n  // const client = await MongoClient.connect(\n  //   \"mongodb+srv://andranikkhachatryandev:hangistnsteq@cluster-test.uriiowo.mongodb.net/?retryWrites=true&w=majority\"\n  // );\n  // const db = client.db();\n  // const meetupsCollection = db.collection(\"meetups\");\n  // const meetups = meetupsCollection.find().toArray();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n  return {\n    props: {\n      id: meetupId,\n      image:\n        \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\",\n      title: \"A first meetup\",\n      address: \"Some street 5 23e\",\n      description: \"The meetup description\",\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}