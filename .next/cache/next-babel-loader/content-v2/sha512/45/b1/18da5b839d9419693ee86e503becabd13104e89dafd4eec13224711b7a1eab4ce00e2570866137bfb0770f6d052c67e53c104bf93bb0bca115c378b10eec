{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andranikkhachatryan/Desktop/React/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n} //fetch data in this function to get data in first render\n//this code running in the server not in client\n//Static Site Generation SSG\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://andranikkhachatryandev:hangistnsteq@cluster-test.uriiowo.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(m => ({\n        title: m.title,\n        address: m.address,\n        image: m.image,\n        description: m.description,\n        id: m._id.toString()\n      }))\n    },\n    //UPDATING THE DATA EVERY 10 SECONDS IN SERVER AFTER DEPLOYMENT\n    revalidate: 10\n  };\n} //Server Side Rendering SSR\n//fetch data from an API\n//this code running in the server not in client\n// export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     }\n//   };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/andranikkhachatryan/Desktop/React/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","Fragment","MongoClient","Head","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","m","title","address","image","description","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,iHADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,CAAD,KAAQ;AAC3BC,QAAAA,KAAK,EAAED,CAAC,CAACC,KADkB;AAE3BC,QAAAA,OAAO,EAAEF,CAAC,CAACE,OAFgB;AAG3BC,QAAAA,KAAK,EAAEH,CAAC,CAACG,KAHkB;AAI3BC,QAAAA,WAAW,EAAEJ,CAAC,CAACI,WAJY;AAK3BC,QAAAA,EAAE,EAAEL,CAAC,CAACM,GAAF,CAAMC,QAAN;AALuB,OAAR,CAAZ;AADJ,KADF;AAUL;AACAC,IAAAA,UAAU,EAAE;AAXP,GAAP;AAaD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAerB,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\n\nfunction HomePage(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title></title>\n      </Head>\n      <MeetupList meetups={props.meetups} />;\n    </Fragment>\n  );\n}\n\n//fetch data in this function to get data in first render\n//this code running in the server not in client\n//Static Site Generation SSG\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://andranikkhachatryandev:hangistnsteq@cluster-test.uriiowo.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map((m) => ({\n        title: m.title,\n        address: m.address,\n        image: m.image,\n        description: m.description,\n        id: m._id.toString(),\n      })),\n    },\n    //UPDATING THE DATA EVERY 10 SECONDS IN SERVER AFTER DEPLOYMENT\n    revalidate: 10,\n  };\n}\n\n//Server Side Rendering SSR\n//fetch data from an API\n//this code running in the server not in client\n// export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     }\n//   };\n// }\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}